---

- name: Create kickstart directory
  file:
    path: "{{ virt_guest_kickstart_config_dir }}"
    state: directory
    mode: 0700

- name: Create kickstart configuration
  template:
    src: vm-ks.cfg.j2
    dest: "{{ virt_guest_kickstart_config_dir }}/{{ item.key }}-ks.cfg"

- name: Run internal http server for serving ks configuration on el7
  shell:
    cmd: "nohup timeout {{ virt_guest_kickstart_config_serve_timeout }} python -m SimpleHTTPServer >/dev/null 2>&1 &"
    chdir: "{{ virt_guest_kickstart_config_dir }}"
  when: ansible_distribution_major_version == "7"

- name: Run internal http server for serving ks configuration on el8
  shell:
    cmd: "nohup timeout {{ virt_guest_kickstart_config_serve_timeout }} python3 -m http.server >/dev/null 2>&1 &"
    chdir: "{{ virt_guest_kickstart_config_dir }}"
  when: ansible_distribution_major_version == "8"

- name: Insert a firewall rule for using ks configuration
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ virt_guest_kickstart_config_port }}"
    jump: ACCEPT
    action: insert
    rule_num: "1"

- name: Download vmlinuz to boot
  get_url:
    url: "{{ virt_guest_os_location }}/images/pxeboot/vmlinuz"
    dest: "/var/lib/libvirt/boot/virtguestinst-vmlinuz"
    force: yes

- name: Download initrd to boot
  get_url:
    url: "{{ virt_guest_os_location }}/images/pxeboot/initrd.img"
    dest: "/var/lib/libvirt/boot/virtguestinst-initrd.img"
    force: yes

- name: Create virtual machine(s)
  virt:
    name: "{{ item.key }}"
    command: define
    xml: "{{ lookup('template', 'vm-install-template.xml.j2') }}"
  notify:
   - Print init passwd

- name: Start installation of virtual machine(s)
  virt:
    name: "{{ item.key }}"
    state: running

- name: Wait to finish the installation
  wait_for:
    timeout: "{{ virt_guest_kickstart_installation_timeout }}"
  delegate_to: localhost
  vars:
    ansible_become: no

- name: Send Crl+Alt+Del for virtual machine(s)
  command:
    cmd: "/usr/bin/virsh send-key {{ item.key }} KEY_LEFTCTRL KEY_LEFTALT KEY_DELETE"

- name: Wait for power off state
  virt:
    name: "{{ item.key }}"
    command: status
  register: vm
  until: vm.status == "shutdown"
  retries: 10
  delay: 1

- name: Undefine installation xml of virtual machine(s)
  virt:
    name: "{{ item.key }}"
    command: undefine
