---

- name: Select specific virtual machine if it set
  set_fact:
    vm_list: "{{ virt_guest_list|dict2items|json_query(jmesh_query) }}"
  vars:
    jmesh_query: >-
      {%- if vm is defined -%}
      [?key=='{{ vm }}']
      {%- else -%}
      [*]
      {%- endif -%}

- name: Add the OS specific variables
  include_vars: "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"

- name: Install dependent packages
  yum:
    name: "{{ dependent_packages }}"
    state: installed

- block:
  - name: Define a new network(s)
    virt_net:
      command: define
      name: "{{ item.key }}"
      xml: '{{ lookup("template", "vm-network.xml.j2") }}'
    loop: "{{ virt_network_list|dict2items }}"

  - name: Start a new network(s)
    virt_net:
      state: active
      name: "{{ item.key }}"
    loop: "{{ virt_network_list|dict2items }}"

  - name: Enable autostart for a new network(s)
    virt_net:
      autostart: yes
      name: "{{ item.key }}"
    loop: "{{ virt_network_list|dict2items }}"

  when: item.key is defined

- include_tasks: prepare-disks.yml
  vars:
    vm_name: "{{ item.key }}"
    disk_list: "{{ item.value.disk }}"
  loop: "{{ vm_list }}"
  when: item.value.disk is defined

- name: Check if virtual machine(s) exists
  virt:
    command: list_vms
  register: result

- set_fact:
    not_existing_vms: true
  loop: "{{ vm_list }}"
  loop_control:
    label: "{{ item.key }}"
  when: not result.list_vms is search('{{ item.key }}')

- include_tasks: kickstart-pre.yml
  when: not_existing_vms is defined
